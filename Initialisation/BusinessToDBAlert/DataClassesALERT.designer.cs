#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessToDBAlert
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ALERT")]
	public partial class DataClassesALERTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAlarme(Alarme instance);
    partial void UpdateAlarme(Alarme instance);
    partial void DeleteAlarme(Alarme instance);
    partial void InsertTypeStation(TypeStation instance);
    partial void UpdateTypeStation(TypeStation instance);
    partial void DeleteTypeStation(TypeStation instance);
    partial void InsertAlarmeMasquee(AlarmeMasquee instance);
    partial void UpdateAlarmeMasquee(AlarmeMasquee instance);
    partial void DeleteAlarmeMasquee(AlarmeMasquee instance);
    partial void InsertAnnee(Annee instance);
    partial void UpdateAnnee(Annee instance);
    partial void DeleteAnnee(Annee instance);
    partial void InsertCommune(Commune instance);
    partial void UpdateCommune(Commune instance);
    partial void DeleteCommune(Commune instance);
    partial void InsertConfiguration(Configuration instance);
    partial void UpdateConfiguration(Configuration instance);
    partial void DeleteConfiguration(Configuration instance);
    partial void InsertDriverConfig(DriverConfig instance);
    partial void UpdateDriverConfig(DriverConfig instance);
    partial void DeleteDriverConfig(DriverConfig instance);
    partial void InsertHorsService(HorsService instance);
    partial void UpdateHorsService(HorsService instance);
    partial void DeleteHorsService(HorsService instance);
    partial void InsertJour(Jour instance);
    partial void UpdateJour(Jour instance);
    partial void DeleteJour(Jour instance);
    partial void InsertJourSemaine(JourSemaine instance);
    partial void UpdateJourSemaine(JourSemaine instance);
    partial void DeleteJourSemaine(JourSemaine instance);
    partial void InsertModeIntervention(ModeIntervention instance);
    partial void UpdateModeIntervention(ModeIntervention instance);
    partial void DeleteModeIntervention(ModeIntervention instance);
    partial void InsertModel_Planning(Model_Planning instance);
    partial void UpdateModel_Planning(Model_Planning instance);
    partial void DeleteModel_Planning(Model_Planning instance);
    partial void InsertMois(Mois instance);
    partial void UpdateMois(Mois instance);
    partial void DeleteMois(Mois instance);
    partial void InsertPeriode(Periode instance);
    partial void UpdatePeriode(Periode instance);
    partial void DeletePeriode(Periode instance);
    partial void InsertPersonne(Personne instance);
    partial void UpdatePersonne(Personne instance);
    partial void DeletePersonne(Personne instance);
    partial void InsertPrioriter(Prioriter instance);
    partial void UpdatePrioriter(Prioriter instance);
    partial void DeletePrioriter(Prioriter instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSecteur(Secteur instance);
    partial void UpdateSecteur(Secteur instance);
    partial void DeleteSecteur(Secteur instance);
    partial void InsertSecteurPersonne(SecteurPersonne instance);
    partial void UpdateSecteurPersonne(SecteurPersonne instance);
    partial void DeleteSecteurPersonne(SecteurPersonne instance);
    partial void InsertSiecle(Siecle instance);
    partial void UpdateSiecle(Siecle instance);
    partial void DeleteSiecle(Siecle instance);
    partial void InsertStation(Station instance);
    partial void UpdateStation(Station instance);
    partial void DeleteStation(Station instance);
    partial void InsertStationMasquee(StationMasquee instance);
    partial void UpdateStationMasquee(StationMasquee instance);
    partial void DeleteStationMasquee(StationMasquee instance);
    partial void InsertTeam(Team instance);
    partial void UpdateTeam(Team instance);
    partial void DeleteTeam(Team instance);
    partial void InsertTranche(Tranche instance);
    partial void UpdateTranche(Tranche instance);
    partial void DeleteTranche(Tranche instance);
    partial void InsertTypeAlarme(TypeAlarme instance);
    partial void UpdateTypeAlarme(TypeAlarme instance);
    partial void DeleteTypeAlarme(TypeAlarme instance);
    partial void InsertTypeDriver(TypeDriver instance);
    partial void UpdateTypeDriver(TypeDriver instance);
    partial void DeleteTypeDriver(TypeDriver instance);
    #endregion
		
		public DataClassesALERTDataContext() : 
				base(global::BusinessToDBAlert.Properties.Settings.Default.ALERTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesALERTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesALERTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesALERTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesALERTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Alarme> Alarme
		{
			get
			{
				return this.GetTable<Alarme>();
			}
		}
		
		public System.Data.Linq.Table<TypeStation> TypeStation
		{
			get
			{
				return this.GetTable<TypeStation>();
			}
		}
		
		public System.Data.Linq.Table<AlarmeMasquee> AlarmeMasquee
		{
			get
			{
				return this.GetTable<AlarmeMasquee>();
			}
		}
		
		public System.Data.Linq.Table<Annee> Annee
		{
			get
			{
				return this.GetTable<Annee>();
			}
		}
		
		public System.Data.Linq.Table<Commune> Commune
		{
			get
			{
				return this.GetTable<Commune>();
			}
		}
		
		public System.Data.Linq.Table<Configuration> Configuration
		{
			get
			{
				return this.GetTable<Configuration>();
			}
		}
		
		public System.Data.Linq.Table<DriverConfig> DriverConfig
		{
			get
			{
				return this.GetTable<DriverConfig>();
			}
		}
		
		public System.Data.Linq.Table<HorsService> HorsService
		{
			get
			{
				return this.GetTable<HorsService>();
			}
		}
		
		public System.Data.Linq.Table<Jour> Jour
		{
			get
			{
				return this.GetTable<Jour>();
			}
		}
		
		public System.Data.Linq.Table<JourSemaine> JourSemaine
		{
			get
			{
				return this.GetTable<JourSemaine>();
			}
		}
		
		public System.Data.Linq.Table<ModeIntervention> ModeIntervention
		{
			get
			{
				return this.GetTable<ModeIntervention>();
			}
		}
		
		public System.Data.Linq.Table<Model_Planning> Model_Planning
		{
			get
			{
				return this.GetTable<Model_Planning>();
			}
		}
		
		public System.Data.Linq.Table<Mois> Mois
		{
			get
			{
				return this.GetTable<Mois>();
			}
		}
		
		public System.Data.Linq.Table<Periode> Periode
		{
			get
			{
				return this.GetTable<Periode>();
			}
		}
		
		public System.Data.Linq.Table<Personne> Personne
		{
			get
			{
				return this.GetTable<Personne>();
			}
		}
		
		public System.Data.Linq.Table<Prioriter> Prioriter
		{
			get
			{
				return this.GetTable<Prioriter>();
			}
		}
		
		public System.Data.Linq.Table<Role> Role
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Secteur> Secteur
		{
			get
			{
				return this.GetTable<Secteur>();
			}
		}
		
		public System.Data.Linq.Table<SecteurPersonne> SecteurPersonne
		{
			get
			{
				return this.GetTable<SecteurPersonne>();
			}
		}
		
		public System.Data.Linq.Table<Siecle> Siecle
		{
			get
			{
				return this.GetTable<Siecle>();
			}
		}
		
		public System.Data.Linq.Table<Station> Station
		{
			get
			{
				return this.GetTable<Station>();
			}
		}
		
		public System.Data.Linq.Table<StationMasquee> StationMasquee
		{
			get
			{
				return this.GetTable<StationMasquee>();
			}
		}
		
		public System.Data.Linq.Table<Team> Team
		{
			get
			{
				return this.GetTable<Team>();
			}
		}
		
		public System.Data.Linq.Table<Tranche> Tranche
		{
			get
			{
				return this.GetTable<Tranche>();
			}
		}
		
		public System.Data.Linq.Table<TypeAlarme> TypeAlarme
		{
			get
			{
				return this.GetTable<TypeAlarme>();
			}
		}
		
		public System.Data.Linq.Table<TypeDriver> TypeDriver
		{
			get
			{
				return this.GetTable<TypeDriver>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alarme")]
	public partial class Alarme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Code;
		
		private string _MessageLong;
		
		private string _MessageCourt;
		
		private int _TypeAlarmeId;
		
		private int _StationId;
		
		private EntitySet<AlarmeMasquee> _AlarmeMasquee;
		
		private EntityRef<Station> _Station;
		
		private EntityRef<TypeAlarme> _TypeAlarme;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnMessageLongChanging(string value);
    partial void OnMessageLongChanged();
    partial void OnMessageCourtChanging(string value);
    partial void OnMessageCourtChanged();
    partial void OnTypeAlarmeIdChanging(int value);
    partial void OnTypeAlarmeIdChanged();
    partial void OnStationIdChanging(int value);
    partial void OnStationIdChanged();
    #endregion
		
		public Alarme()
		{
			this._AlarmeMasquee = new EntitySet<AlarmeMasquee>(new Action<AlarmeMasquee>(this.attach_AlarmeMasquee), new Action<AlarmeMasquee>(this.detach_AlarmeMasquee));
			this._Station = default(EntityRef<Station>);
			this._TypeAlarme = default(EntityRef<TypeAlarme>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageLong", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string MessageLong
		{
			get
			{
				return this._MessageLong;
			}
			set
			{
				if ((this._MessageLong != value))
				{
					this.OnMessageLongChanging(value);
					this.SendPropertyChanging();
					this._MessageLong = value;
					this.SendPropertyChanged("MessageLong");
					this.OnMessageLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageCourt", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string MessageCourt
		{
			get
			{
				return this._MessageCourt;
			}
			set
			{
				if ((this._MessageCourt != value))
				{
					this.OnMessageCourtChanging(value);
					this.SendPropertyChanging();
					this._MessageCourt = value;
					this.SendPropertyChanged("MessageCourt");
					this.OnMessageCourtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeAlarmeId", DbType="Int NOT NULL")]
		public int TypeAlarmeId
		{
			get
			{
				return this._TypeAlarmeId;
			}
			set
			{
				if ((this._TypeAlarmeId != value))
				{
					if (this._TypeAlarme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeAlarmeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeAlarmeId = value;
					this.SendPropertyChanged("TypeAlarmeId");
					this.OnTypeAlarmeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId", DbType="Int NOT NULL")]
		public int StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					if (this._Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alarme_AlarmeMasquee", Storage="_AlarmeMasquee", ThisKey="Id", OtherKey="AlarmeId")]
		public EntitySet<AlarmeMasquee> AlarmeMasquee
		{
			get
			{
				return this._AlarmeMasquee;
			}
			set
			{
				this._AlarmeMasquee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Alarme", Storage="_Station", ThisKey="StationId", OtherKey="Id", IsForeignKey=true)]
		public Station Station
		{
			get
			{
				return this._Station.Entity;
			}
			set
			{
				Station previousValue = this._Station.Entity;
				if (((previousValue != value) 
							|| (this._Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Station.Entity = null;
						previousValue.Alarme.Remove(this);
					}
					this._Station.Entity = value;
					if ((value != null))
					{
						value.Alarme.Add(this);
						this._StationId = value.Id;
					}
					else
					{
						this._StationId = default(int);
					}
					this.SendPropertyChanged("Station");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAlarme_Alarme", Storage="_TypeAlarme", ThisKey="TypeAlarmeId", OtherKey="Id", IsForeignKey=true)]
		public TypeAlarme TypeAlarme
		{
			get
			{
				return this._TypeAlarme.Entity;
			}
			set
			{
				TypeAlarme previousValue = this._TypeAlarme.Entity;
				if (((previousValue != value) 
							|| (this._TypeAlarme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeAlarme.Entity = null;
						previousValue.Alarme.Remove(this);
					}
					this._TypeAlarme.Entity = value;
					if ((value != null))
					{
						value.Alarme.Add(this);
						this._TypeAlarmeId = value.Id;
					}
					else
					{
						this._TypeAlarmeId = default(int);
					}
					this.SendPropertyChanged("TypeAlarme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlarmeMasquee(AlarmeMasquee entity)
		{
			this.SendPropertyChanging();
			entity.Alarme = this;
		}
		
		private void detach_AlarmeMasquee(AlarmeMasquee entity)
		{
			this.SendPropertyChanging();
			entity.Alarme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeStation")]
	public partial class TypeStation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descrition;
		
		private string _TypeAbreger;
		
		private EntitySet<Station> _Station;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescritionChanging(string value);
    partial void OnDescritionChanged();
    partial void OnTypeAbregerChanging(string value);
    partial void OnTypeAbregerChanged();
    #endregion
		
		public TypeStation()
		{
			this._Station = new EntitySet<Station>(new Action<Station>(this.attach_Station), new Action<Station>(this.detach_Station));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrition", DbType="VarChar(128)")]
		public string Descrition
		{
			get
			{
				return this._Descrition;
			}
			set
			{
				if ((this._Descrition != value))
				{
					this.OnDescritionChanging(value);
					this.SendPropertyChanging();
					this._Descrition = value;
					this.SendPropertyChanged("Descrition");
					this.OnDescritionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeAbreger", DbType="VarChar(12)")]
		public string TypeAbreger
		{
			get
			{
				return this._TypeAbreger;
			}
			set
			{
				if ((this._TypeAbreger != value))
				{
					this.OnTypeAbregerChanging(value);
					this.SendPropertyChanging();
					this._TypeAbreger = value;
					this.SendPropertyChanged("TypeAbreger");
					this.OnTypeAbregerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeStation_Station", Storage="_Station", ThisKey="Id", OtherKey="TypeStationId")]
		public EntitySet<Station> Station
		{
			get
			{
				return this._Station;
			}
			set
			{
				this._Station.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Station(Station entity)
		{
			this.SendPropertyChanging();
			entity.TypeStation = this;
		}
		
		private void detach_Station(Station entity)
		{
			this.SendPropertyChanging();
			entity.TypeStation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlarmeMasquee")]
	public partial class AlarmeMasquee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateDebut;
		
		private System.DateTime _DateFin;
		
		private string _Comment;
		
		private int _PersonneId;
		
		private int _AlarmeId;
		
		private EntityRef<Alarme> _Alarme;
		
		private EntityRef<Personne> _Personne;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateDebutChanging(System.DateTime value);
    partial void OnDateDebutChanged();
    partial void OnDateFinChanging(System.DateTime value);
    partial void OnDateFinChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPersonneIdChanging(int value);
    partial void OnPersonneIdChanged();
    partial void OnAlarmeIdChanging(int value);
    partial void OnAlarmeIdChanged();
    #endregion
		
		public AlarmeMasquee()
		{
			this._Alarme = default(EntityRef<Alarme>);
			this._Personne = default(EntityRef<Personne>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebut", DbType="Date NOT NULL")]
		public System.DateTime DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFin", DbType="Date NOT NULL")]
		public System.DateTime DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(1024)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonneId", DbType="Int NOT NULL")]
		public int PersonneId
		{
			get
			{
				return this._PersonneId;
			}
			set
			{
				if ((this._PersonneId != value))
				{
					if (this._Personne.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonneIdChanging(value);
					this.SendPropertyChanging();
					this._PersonneId = value;
					this.SendPropertyChanged("PersonneId");
					this.OnPersonneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmeId", DbType="Int NOT NULL")]
		public int AlarmeId
		{
			get
			{
				return this._AlarmeId;
			}
			set
			{
				if ((this._AlarmeId != value))
				{
					if (this._Alarme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlarmeIdChanging(value);
					this.SendPropertyChanging();
					this._AlarmeId = value;
					this.SendPropertyChanged("AlarmeId");
					this.OnAlarmeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alarme_AlarmeMasquee", Storage="_Alarme", ThisKey="AlarmeId", OtherKey="Id", IsForeignKey=true)]
		public Alarme Alarme
		{
			get
			{
				return this._Alarme.Entity;
			}
			set
			{
				Alarme previousValue = this._Alarme.Entity;
				if (((previousValue != value) 
							|| (this._Alarme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alarme.Entity = null;
						previousValue.AlarmeMasquee.Remove(this);
					}
					this._Alarme.Entity = value;
					if ((value != null))
					{
						value.AlarmeMasquee.Add(this);
						this._AlarmeId = value.Id;
					}
					else
					{
						this._AlarmeId = default(int);
					}
					this.SendPropertyChanged("Alarme");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_AlarmeMasquee", Storage="_Personne", ThisKey="PersonneId", OtherKey="Id", IsForeignKey=true)]
		public Personne Personne
		{
			get
			{
				return this._Personne.Entity;
			}
			set
			{
				Personne previousValue = this._Personne.Entity;
				if (((previousValue != value) 
							|| (this._Personne.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personne.Entity = null;
						previousValue.AlarmeMasquee.Remove(this);
					}
					this._Personne.Entity = value;
					if ((value != null))
					{
						value.AlarmeMasquee.Add(this);
						this._PersonneId = value.Id;
					}
					else
					{
						this._PersonneId = default(int);
					}
					this.SendPropertyChanged("Personne");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Annee")]
	public partial class Annee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Annee1;
		
		private int _SiecleId;
		
		private EntitySet<Mois> _Mois;
		
		private EntityRef<Siecle> _Siecle;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAnnee1Changing(System.Nullable<int> value);
    partial void OnAnnee1Changed();
    partial void OnSiecleIdChanging(int value);
    partial void OnSiecleIdChanged();
    #endregion
		
		public Annee()
		{
			this._Mois = new EntitySet<Mois>(new Action<Mois>(this.attach_Mois), new Action<Mois>(this.detach_Mois));
			this._Siecle = default(EntityRef<Siecle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Annee", Storage="_Annee1", DbType="Int")]
		public System.Nullable<int> Annee1
		{
			get
			{
				return this._Annee1;
			}
			set
			{
				if ((this._Annee1 != value))
				{
					this.OnAnnee1Changing(value);
					this.SendPropertyChanging();
					this._Annee1 = value;
					this.SendPropertyChanged("Annee1");
					this.OnAnnee1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiecleId", DbType="Int NOT NULL")]
		public int SiecleId
		{
			get
			{
				return this._SiecleId;
			}
			set
			{
				if ((this._SiecleId != value))
				{
					if (this._Siecle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiecleIdChanging(value);
					this.SendPropertyChanging();
					this._SiecleId = value;
					this.SendPropertyChanged("SiecleId");
					this.OnSiecleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Annee_Mois", Storage="_Mois", ThisKey="Id", OtherKey="AnneeId")]
		public EntitySet<Mois> Mois
		{
			get
			{
				return this._Mois;
			}
			set
			{
				this._Mois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Siecle_Annee", Storage="_Siecle", ThisKey="SiecleId", OtherKey="Id", IsForeignKey=true)]
		public Siecle Siecle
		{
			get
			{
				return this._Siecle.Entity;
			}
			set
			{
				Siecle previousValue = this._Siecle.Entity;
				if (((previousValue != value) 
							|| (this._Siecle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Siecle.Entity = null;
						previousValue.Annee.Remove(this);
					}
					this._Siecle.Entity = value;
					if ((value != null))
					{
						value.Annee.Add(this);
						this._SiecleId = value.Id;
					}
					else
					{
						this._SiecleId = default(int);
					}
					this.SendPropertyChanged("Siecle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mois(Mois entity)
		{
			this.SendPropertyChanging();
			entity.Annee = this;
		}
		
		private void detach_Mois(Mois entity)
		{
			this.SendPropertyChanging();
			entity.Annee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commune")]
	public partial class Commune : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private System.Nullable<int> _CodePostal;
		
		private EntitySet<Station> _Station;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnCodePostalChanging(System.Nullable<int> value);
    partial void OnCodePostalChanged();
    #endregion
		
		public Commune()
		{
			this._Station = new EntitySet<Station>(new Action<Station>(this.attach_Station), new Action<Station>(this.detach_Station));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(128)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodePostal", DbType="Int")]
		public System.Nullable<int> CodePostal
		{
			get
			{
				return this._CodePostal;
			}
			set
			{
				if ((this._CodePostal != value))
				{
					this.OnCodePostalChanging(value);
					this.SendPropertyChanging();
					this._CodePostal = value;
					this.SendPropertyChanged("CodePostal");
					this.OnCodePostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commune_Station", Storage="_Station", ThisKey="Id", OtherKey="CommuneId")]
		public EntitySet<Station> Station
		{
			get
			{
				return this._Station;
			}
			set
			{
				this._Station.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Station(Station entity)
		{
			this.SendPropertyChanging();
			entity.Commune = this;
		}
		
		private void detach_Station(Station entity)
		{
			this.SendPropertyChanging();
			entity.Commune = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Configuration")]
	public partial class Configuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Cle;
		
		private string _Value;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCleChanging(string value);
    partial void OnCleChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Configuration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cle", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string Cle
		{
			get
			{
				return this._Cle;
			}
			set
			{
				if ((this._Cle != value))
				{
					this.OnCleChanging(value);
					this.SendPropertyChanging();
					this._Cle = value;
					this.SendPropertyChanged("Cle");
					this.OnCleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DriverConfig")]
	public partial class DriverConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Prioriter;
		
		private System.Nullable<bool> _AutoAck;
		
		private string _Adresse;
		
		private System.Nullable<int> _CountAck;
		
		private System.Nullable<int> _CountTry;
		
		private System.Nullable<bool> _Final;
		
		private System.Nullable<int> _TimeToAck;
		
		private System.Nullable<int> _TimeToRetry;
		
		private System.Nullable<bool> _Valide;
		
		private int _PersonneId;
		
		private int _TypeDriverId;
		
		private EntityRef<Personne> _Personne;
		
		private EntityRef<TypeDriver> _TypeDriver;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPrioriterChanging(System.Nullable<int> value);
    partial void OnPrioriterChanged();
    partial void OnAutoAckChanging(System.Nullable<bool> value);
    partial void OnAutoAckChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnCountAckChanging(System.Nullable<int> value);
    partial void OnCountAckChanged();
    partial void OnCountTryChanging(System.Nullable<int> value);
    partial void OnCountTryChanged();
    partial void OnFinalChanging(System.Nullable<bool> value);
    partial void OnFinalChanged();
    partial void OnTimeToAckChanging(System.Nullable<int> value);
    partial void OnTimeToAckChanged();
    partial void OnTimeToRetryChanging(System.Nullable<int> value);
    partial void OnTimeToRetryChanged();
    partial void OnValideChanging(System.Nullable<bool> value);
    partial void OnValideChanged();
    partial void OnPersonneIdChanging(int value);
    partial void OnPersonneIdChanged();
    partial void OnTypeDriverIdChanging(int value);
    partial void OnTypeDriverIdChanged();
    #endregion
		
		public DriverConfig()
		{
			this._Personne = default(EntityRef<Personne>);
			this._TypeDriver = default(EntityRef<TypeDriver>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prioriter", DbType="Int")]
		public System.Nullable<int> Prioriter
		{
			get
			{
				return this._Prioriter;
			}
			set
			{
				if ((this._Prioriter != value))
				{
					this.OnPrioriterChanging(value);
					this.SendPropertyChanging();
					this._Prioriter = value;
					this.SendPropertyChanged("Prioriter");
					this.OnPrioriterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoAck", DbType="Bit")]
		public System.Nullable<bool> AutoAck
		{
			get
			{
				return this._AutoAck;
			}
			set
			{
				if ((this._AutoAck != value))
				{
					this.OnAutoAckChanging(value);
					this.SendPropertyChanging();
					this._AutoAck = value;
					this.SendPropertyChanged("AutoAck");
					this.OnAutoAckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(1024)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountAck", DbType="Int")]
		public System.Nullable<int> CountAck
		{
			get
			{
				return this._CountAck;
			}
			set
			{
				if ((this._CountAck != value))
				{
					this.OnCountAckChanging(value);
					this.SendPropertyChanging();
					this._CountAck = value;
					this.SendPropertyChanged("CountAck");
					this.OnCountAckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountTry", DbType="Int")]
		public System.Nullable<int> CountTry
		{
			get
			{
				return this._CountTry;
			}
			set
			{
				if ((this._CountTry != value))
				{
					this.OnCountTryChanging(value);
					this.SendPropertyChanging();
					this._CountTry = value;
					this.SendPropertyChanged("CountTry");
					this.OnCountTryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Final", DbType="Bit")]
		public System.Nullable<bool> Final
		{
			get
			{
				return this._Final;
			}
			set
			{
				if ((this._Final != value))
				{
					this.OnFinalChanging(value);
					this.SendPropertyChanging();
					this._Final = value;
					this.SendPropertyChanged("Final");
					this.OnFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeToAck", DbType="Int")]
		public System.Nullable<int> TimeToAck
		{
			get
			{
				return this._TimeToAck;
			}
			set
			{
				if ((this._TimeToAck != value))
				{
					this.OnTimeToAckChanging(value);
					this.SendPropertyChanging();
					this._TimeToAck = value;
					this.SendPropertyChanged("TimeToAck");
					this.OnTimeToAckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeToRetry", DbType="Int")]
		public System.Nullable<int> TimeToRetry
		{
			get
			{
				return this._TimeToRetry;
			}
			set
			{
				if ((this._TimeToRetry != value))
				{
					this.OnTimeToRetryChanging(value);
					this.SendPropertyChanging();
					this._TimeToRetry = value;
					this.SendPropertyChanged("TimeToRetry");
					this.OnTimeToRetryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valide", DbType="Bit")]
		public System.Nullable<bool> Valide
		{
			get
			{
				return this._Valide;
			}
			set
			{
				if ((this._Valide != value))
				{
					this.OnValideChanging(value);
					this.SendPropertyChanging();
					this._Valide = value;
					this.SendPropertyChanged("Valide");
					this.OnValideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonneId", DbType="Int NOT NULL")]
		public int PersonneId
		{
			get
			{
				return this._PersonneId;
			}
			set
			{
				if ((this._PersonneId != value))
				{
					if (this._Personne.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonneIdChanging(value);
					this.SendPropertyChanging();
					this._PersonneId = value;
					this.SendPropertyChanged("PersonneId");
					this.OnPersonneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDriverId", DbType="Int NOT NULL")]
		public int TypeDriverId
		{
			get
			{
				return this._TypeDriverId;
			}
			set
			{
				if ((this._TypeDriverId != value))
				{
					if (this._TypeDriver.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeDriverIdChanging(value);
					this.SendPropertyChanging();
					this._TypeDriverId = value;
					this.SendPropertyChanged("TypeDriverId");
					this.OnTypeDriverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_DriverConfig", Storage="_Personne", ThisKey="PersonneId", OtherKey="Id", IsForeignKey=true)]
		public Personne Personne
		{
			get
			{
				return this._Personne.Entity;
			}
			set
			{
				Personne previousValue = this._Personne.Entity;
				if (((previousValue != value) 
							|| (this._Personne.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personne.Entity = null;
						previousValue.DriverConfig.Remove(this);
					}
					this._Personne.Entity = value;
					if ((value != null))
					{
						value.DriverConfig.Add(this);
						this._PersonneId = value.Id;
					}
					else
					{
						this._PersonneId = default(int);
					}
					this.SendPropertyChanged("Personne");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeDriver_DriverConfig", Storage="_TypeDriver", ThisKey="TypeDriverId", OtherKey="Id", IsForeignKey=true)]
		public TypeDriver TypeDriver
		{
			get
			{
				return this._TypeDriver.Entity;
			}
			set
			{
				TypeDriver previousValue = this._TypeDriver.Entity;
				if (((previousValue != value) 
							|| (this._TypeDriver.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeDriver.Entity = null;
						previousValue.DriverConfig.Remove(this);
					}
					this._TypeDriver.Entity = value;
					if ((value != null))
					{
						value.DriverConfig.Add(this);
						this._TypeDriverId = value.Id;
					}
					else
					{
						this._TypeDriverId = default(int);
					}
					this.SendPropertyChanged("TypeDriver");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HorsService")]
	public partial class HorsService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateDebut;
		
		private System.DateTime _DateFin;
		
		private int _PersonneId;
		
		private EntityRef<Personne> _Personne;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateDebutChanging(System.DateTime value);
    partial void OnDateDebutChanged();
    partial void OnDateFinChanging(System.DateTime value);
    partial void OnDateFinChanged();
    partial void OnPersonneIdChanging(int value);
    partial void OnPersonneIdChanged();
    #endregion
		
		public HorsService()
		{
			this._Personne = default(EntityRef<Personne>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebut", DbType="Date NOT NULL")]
		public System.DateTime DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFin", DbType="Date NOT NULL")]
		public System.DateTime DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonneId", DbType="Int NOT NULL")]
		public int PersonneId
		{
			get
			{
				return this._PersonneId;
			}
			set
			{
				if ((this._PersonneId != value))
				{
					if (this._Personne.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonneIdChanging(value);
					this.SendPropertyChanging();
					this._PersonneId = value;
					this.SendPropertyChanged("PersonneId");
					this.OnPersonneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_HorsService", Storage="_Personne", ThisKey="PersonneId", OtherKey="Id", IsForeignKey=true)]
		public Personne Personne
		{
			get
			{
				return this._Personne.Entity;
			}
			set
			{
				Personne previousValue = this._Personne.Entity;
				if (((previousValue != value) 
							|| (this._Personne.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personne.Entity = null;
						previousValue.HorsService.Remove(this);
					}
					this._Personne.Entity = value;
					if ((value != null))
					{
						value.HorsService.Add(this);
						this._PersonneId = value.Id;
					}
					else
					{
						this._PersonneId = default(int);
					}
					this.SendPropertyChanged("Personne");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jour")]
	public partial class Jour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Numero;
		
		private int _JourSemaineId;
		
		private int _MoisId;
		
		private EntitySet<Tranche> _Tranche;
		
		private EntityRef<JourSemaine> _JourSemaine;
		
		private EntityRef<Mois> _Mois;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeroChanging(System.Nullable<int> value);
    partial void OnNumeroChanged();
    partial void OnJourSemaineIdChanging(int value);
    partial void OnJourSemaineIdChanged();
    partial void OnMoisIdChanging(int value);
    partial void OnMoisIdChanged();
    #endregion
		
		public Jour()
		{
			this._Tranche = new EntitySet<Tranche>(new Action<Tranche>(this.attach_Tranche), new Action<Tranche>(this.detach_Tranche));
			this._JourSemaine = default(EntityRef<JourSemaine>);
			this._Mois = default(EntityRef<Mois>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int")]
		public System.Nullable<int> Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JourSemaineId", DbType="Int NOT NULL")]
		public int JourSemaineId
		{
			get
			{
				return this._JourSemaineId;
			}
			set
			{
				if ((this._JourSemaineId != value))
				{
					if (this._JourSemaine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJourSemaineIdChanging(value);
					this.SendPropertyChanging();
					this._JourSemaineId = value;
					this.SendPropertyChanged("JourSemaineId");
					this.OnJourSemaineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoisId", DbType="Int NOT NULL")]
		public int MoisId
		{
			get
			{
				return this._MoisId;
			}
			set
			{
				if ((this._MoisId != value))
				{
					if (this._Mois.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMoisIdChanging(value);
					this.SendPropertyChanging();
					this._MoisId = value;
					this.SendPropertyChanged("MoisId");
					this.OnMoisIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jour_Tranche", Storage="_Tranche", ThisKey="Id", OtherKey="JourId")]
		public EntitySet<Tranche> Tranche
		{
			get
			{
				return this._Tranche;
			}
			set
			{
				this._Tranche.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JourSemaine_Jour", Storage="_JourSemaine", ThisKey="JourSemaineId", OtherKey="Id", IsForeignKey=true)]
		public JourSemaine JourSemaine
		{
			get
			{
				return this._JourSemaine.Entity;
			}
			set
			{
				JourSemaine previousValue = this._JourSemaine.Entity;
				if (((previousValue != value) 
							|| (this._JourSemaine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JourSemaine.Entity = null;
						previousValue.Jour1.Remove(this);
					}
					this._JourSemaine.Entity = value;
					if ((value != null))
					{
						value.Jour1.Add(this);
						this._JourSemaineId = value.Id;
					}
					else
					{
						this._JourSemaineId = default(int);
					}
					this.SendPropertyChanged("JourSemaine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mois_Jour", Storage="_Mois", ThisKey="MoisId", OtherKey="Id", IsForeignKey=true)]
		public Mois Mois
		{
			get
			{
				return this._Mois.Entity;
			}
			set
			{
				Mois previousValue = this._Mois.Entity;
				if (((previousValue != value) 
							|| (this._Mois.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mois.Entity = null;
						previousValue.Jour.Remove(this);
					}
					this._Mois.Entity = value;
					if ((value != null))
					{
						value.Jour.Add(this);
						this._MoisId = value.Id;
					}
					else
					{
						this._MoisId = default(int);
					}
					this.SendPropertyChanged("Mois");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tranche(Tranche entity)
		{
			this.SendPropertyChanging();
			entity.Jour = this;
		}
		
		private void detach_Tranche(Tranche entity)
		{
			this.SendPropertyChanging();
			entity.Jour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JourSemaine")]
	public partial class JourSemaine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Jour;
		
		private System.Nullable<int> _Numero;
		
		private EntitySet<Jour> _Jour1;
		
		private EntitySet<Model_Planning> _Model_Planning;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnJourChanging(string value);
    partial void OnJourChanged();
    partial void OnNumeroChanging(System.Nullable<int> value);
    partial void OnNumeroChanged();
    #endregion
		
		public JourSemaine()
		{
			this._Jour1 = new EntitySet<Jour>(new Action<Jour>(this.attach_Jour1), new Action<Jour>(this.detach_Jour1));
			this._Model_Planning = new EntitySet<Model_Planning>(new Action<Model_Planning>(this.attach_Model_Planning), new Action<Model_Planning>(this.detach_Model_Planning));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jour", DbType="VarChar(128)")]
		public string Jour
		{
			get
			{
				return this._Jour;
			}
			set
			{
				if ((this._Jour != value))
				{
					this.OnJourChanging(value);
					this.SendPropertyChanging();
					this._Jour = value;
					this.SendPropertyChanged("Jour");
					this.OnJourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int")]
		public System.Nullable<int> Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JourSemaine_Jour", Storage="_Jour1", ThisKey="Id", OtherKey="JourSemaineId")]
		public EntitySet<Jour> Jour1
		{
			get
			{
				return this._Jour1;
			}
			set
			{
				this._Jour1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JourSemaine_Model_Planning", Storage="_Model_Planning", ThisKey="Id", OtherKey="JourSemaineId")]
		public EntitySet<Model_Planning> Model_Planning
		{
			get
			{
				return this._Model_Planning;
			}
			set
			{
				this._Model_Planning.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jour1(Jour entity)
		{
			this.SendPropertyChanging();
			entity.JourSemaine = this;
		}
		
		private void detach_Jour1(Jour entity)
		{
			this.SendPropertyChanging();
			entity.JourSemaine = null;
		}
		
		private void attach_Model_Planning(Model_Planning entity)
		{
			this.SendPropertyChanging();
			entity.JourSemaine = this;
		}
		
		private void detach_Model_Planning(Model_Planning entity)
		{
			this.SendPropertyChanging();
			entity.JourSemaine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModeIntervention")]
	public partial class ModeIntervention : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateDebut;
		
		private System.DateTime _DateFin;
		
		private int _PersonneId;
		
		private int _StationId;
		
		private EntityRef<Personne> _Personne;
		
		private EntityRef<Station> _Station;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateDebutChanging(System.DateTime value);
    partial void OnDateDebutChanged();
    partial void OnDateFinChanging(System.DateTime value);
    partial void OnDateFinChanged();
    partial void OnPersonneIdChanging(int value);
    partial void OnPersonneIdChanged();
    partial void OnStationIdChanging(int value);
    partial void OnStationIdChanged();
    #endregion
		
		public ModeIntervention()
		{
			this._Personne = default(EntityRef<Personne>);
			this._Station = default(EntityRef<Station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebut", DbType="Date NOT NULL")]
		public System.DateTime DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFin", DbType="Date NOT NULL")]
		public System.DateTime DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonneId", DbType="Int NOT NULL")]
		public int PersonneId
		{
			get
			{
				return this._PersonneId;
			}
			set
			{
				if ((this._PersonneId != value))
				{
					if (this._Personne.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonneIdChanging(value);
					this.SendPropertyChanging();
					this._PersonneId = value;
					this.SendPropertyChanged("PersonneId");
					this.OnPersonneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId", DbType="Int NOT NULL")]
		public int StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					if (this._Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_ModeIntervention", Storage="_Personne", ThisKey="PersonneId", OtherKey="Id", IsForeignKey=true)]
		public Personne Personne
		{
			get
			{
				return this._Personne.Entity;
			}
			set
			{
				Personne previousValue = this._Personne.Entity;
				if (((previousValue != value) 
							|| (this._Personne.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personne.Entity = null;
						previousValue.ModeIntervention.Remove(this);
					}
					this._Personne.Entity = value;
					if ((value != null))
					{
						value.ModeIntervention.Add(this);
						this._PersonneId = value.Id;
					}
					else
					{
						this._PersonneId = default(int);
					}
					this.SendPropertyChanged("Personne");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_ModeIntervention", Storage="_Station", ThisKey="StationId", OtherKey="Id", IsForeignKey=true)]
		public Station Station
		{
			get
			{
				return this._Station.Entity;
			}
			set
			{
				Station previousValue = this._Station.Entity;
				if (((previousValue != value) 
							|| (this._Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Station.Entity = null;
						previousValue.ModeIntervention.Remove(this);
					}
					this._Station.Entity = value;
					if ((value != null))
					{
						value.ModeIntervention.Add(this);
						this._StationId = value.Id;
					}
					else
					{
						this._StationId = default(int);
					}
					this.SendPropertyChanged("Station");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Model_Planning")]
	public partial class Model_Planning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _NumeroTranche;
		
		private System.Nullable<int> _Heure;
		
		private System.Nullable<int> _Minute;
		
		private System.Nullable<bool> _Repli;
		
		private int _RoleId;
		
		private int _TeamId;
		
		private System.Nullable<int> _TypeId;
		
		private int _JourSemaineId;
		
		private EntityRef<JourSemaine> _JourSemaine;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Team> _Team;
		
		private EntityRef<Team> _Team1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeroTrancheChanging(System.Nullable<int> value);
    partial void OnNumeroTrancheChanged();
    partial void OnHeureChanging(System.Nullable<int> value);
    partial void OnHeureChanged();
    partial void OnMinuteChanging(System.Nullable<int> value);
    partial void OnMinuteChanged();
    partial void OnRepliChanging(System.Nullable<bool> value);
    partial void OnRepliChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnTeamIdChanging(int value);
    partial void OnTeamIdChanged();
    partial void OnTypeIdChanging(System.Nullable<int> value);
    partial void OnTypeIdChanged();
    partial void OnJourSemaineIdChanging(int value);
    partial void OnJourSemaineIdChanged();
    #endregion
		
		public Model_Planning()
		{
			this._JourSemaine = default(EntityRef<JourSemaine>);
			this._Role = default(EntityRef<Role>);
			this._Team = default(EntityRef<Team>);
			this._Team1 = default(EntityRef<Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroTranche", DbType="Int")]
		public System.Nullable<int> NumeroTranche
		{
			get
			{
				return this._NumeroTranche;
			}
			set
			{
				if ((this._NumeroTranche != value))
				{
					this.OnNumeroTrancheChanging(value);
					this.SendPropertyChanging();
					this._NumeroTranche = value;
					this.SendPropertyChanged("NumeroTranche");
					this.OnNumeroTrancheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heure", DbType="Int")]
		public System.Nullable<int> Heure
		{
			get
			{
				return this._Heure;
			}
			set
			{
				if ((this._Heure != value))
				{
					this.OnHeureChanging(value);
					this.SendPropertyChanging();
					this._Heure = value;
					this.SendPropertyChanged("Heure");
					this.OnHeureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minute", DbType="Int")]
		public System.Nullable<int> Minute
		{
			get
			{
				return this._Minute;
			}
			set
			{
				if ((this._Minute != value))
				{
					this.OnMinuteChanging(value);
					this.SendPropertyChanging();
					this._Minute = value;
					this.SendPropertyChanged("Minute");
					this.OnMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Repli", DbType="Bit")]
		public System.Nullable<bool> Repli
		{
			get
			{
				return this._Repli;
			}
			set
			{
				if ((this._Repli != value))
				{
					this.OnRepliChanging(value);
					this.SendPropertyChanging();
					this._Repli = value;
					this.SendPropertyChanged("Repli");
					this.OnRepliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="Int NOT NULL")]
		public int TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					if (this._Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._Team1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JourSemaineId", DbType="Int NOT NULL")]
		public int JourSemaineId
		{
			get
			{
				return this._JourSemaineId;
			}
			set
			{
				if ((this._JourSemaineId != value))
				{
					if (this._JourSemaine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJourSemaineIdChanging(value);
					this.SendPropertyChanging();
					this._JourSemaineId = value;
					this.SendPropertyChanged("JourSemaineId");
					this.OnJourSemaineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JourSemaine_Model_Planning", Storage="_JourSemaine", ThisKey="JourSemaineId", OtherKey="Id", IsForeignKey=true)]
		public JourSemaine JourSemaine
		{
			get
			{
				return this._JourSemaine.Entity;
			}
			set
			{
				JourSemaine previousValue = this._JourSemaine.Entity;
				if (((previousValue != value) 
							|| (this._JourSemaine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JourSemaine.Entity = null;
						previousValue.Model_Planning.Remove(this);
					}
					this._JourSemaine.Entity = value;
					if ((value != null))
					{
						value.Model_Planning.Add(this);
						this._JourSemaineId = value.Id;
					}
					else
					{
						this._JourSemaineId = default(int);
					}
					this.SendPropertyChanged("JourSemaine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Model_Planning", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Model_Planning.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Model_Planning.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Model_Planning", Storage="_Team", ThisKey="TeamId", OtherKey="Id", IsForeignKey=true)]
		public Team Team
		{
			get
			{
				return this._Team.Entity;
			}
			set
			{
				Team previousValue = this._Team.Entity;
				if (((previousValue != value) 
							|| (this._Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team.Entity = null;
						previousValue.Model_Planning.Remove(this);
					}
					this._Team.Entity = value;
					if ((value != null))
					{
						value.Model_Planning.Add(this);
						this._TeamId = value.Id;
					}
					else
					{
						this._TeamId = default(int);
					}
					this.SendPropertyChanged("Team");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Model_Planning1", Storage="_Team1", ThisKey="TypeId", OtherKey="Id", IsForeignKey=true)]
		public Team Team1
		{
			get
			{
				return this._Team1.Entity;
			}
			set
			{
				Team previousValue = this._Team1.Entity;
				if (((previousValue != value) 
							|| (this._Team1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team1.Entity = null;
						previousValue.Model_Planning1.Remove(this);
					}
					this._Team1.Entity = value;
					if ((value != null))
					{
						value.Model_Planning1.Add(this);
						this._TypeId = value.Id;
					}
					else
					{
						this._TypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Team1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mois")]
	public partial class Mois : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Mois1;
		
		private System.Nullable<int> _Numero;
		
		private int _AnneeId;
		
		private EntitySet<Jour> _Jour;
		
		private EntityRef<Annee> _Annee;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMois1Changing(string value);
    partial void OnMois1Changed();
    partial void OnNumeroChanging(System.Nullable<int> value);
    partial void OnNumeroChanged();
    partial void OnAnneeIdChanging(int value);
    partial void OnAnneeIdChanged();
    #endregion
		
		public Mois()
		{
			this._Jour = new EntitySet<Jour>(new Action<Jour>(this.attach_Jour), new Action<Jour>(this.detach_Jour));
			this._Annee = default(EntityRef<Annee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Mois", Storage="_Mois1", DbType="VarChar(128)")]
		public string Mois1
		{
			get
			{
				return this._Mois1;
			}
			set
			{
				if ((this._Mois1 != value))
				{
					this.OnMois1Changing(value);
					this.SendPropertyChanging();
					this._Mois1 = value;
					this.SendPropertyChanged("Mois1");
					this.OnMois1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int")]
		public System.Nullable<int> Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnneeId", DbType="Int NOT NULL")]
		public int AnneeId
		{
			get
			{
				return this._AnneeId;
			}
			set
			{
				if ((this._AnneeId != value))
				{
					if (this._Annee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnneeIdChanging(value);
					this.SendPropertyChanging();
					this._AnneeId = value;
					this.SendPropertyChanged("AnneeId");
					this.OnAnneeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mois_Jour", Storage="_Jour", ThisKey="Id", OtherKey="MoisId")]
		public EntitySet<Jour> Jour
		{
			get
			{
				return this._Jour;
			}
			set
			{
				this._Jour.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Annee_Mois", Storage="_Annee", ThisKey="AnneeId", OtherKey="Id", IsForeignKey=true)]
		public Annee Annee
		{
			get
			{
				return this._Annee.Entity;
			}
			set
			{
				Annee previousValue = this._Annee.Entity;
				if (((previousValue != value) 
							|| (this._Annee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Annee.Entity = null;
						previousValue.Mois.Remove(this);
					}
					this._Annee.Entity = value;
					if ((value != null))
					{
						value.Mois.Add(this);
						this._AnneeId = value.Id;
					}
					else
					{
						this._AnneeId = default(int);
					}
					this.SendPropertyChanged("Annee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jour(Jour entity)
		{
			this.SendPropertyChanging();
			entity.Mois = this;
		}
		
		private void detach_Jour(Jour entity)
		{
			this.SendPropertyChanging();
			entity.Mois = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Periode")]
	public partial class Periode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    #endregion
		
		public Periode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(128)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personne")]
	public partial class Personne : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private int _RoleId;
		
		private EntitySet<AlarmeMasquee> _AlarmeMasquee;
		
		private EntitySet<DriverConfig> _DriverConfig;
		
		private EntitySet<HorsService> _HorsService;
		
		private EntitySet<ModeIntervention> _ModeIntervention;
		
		private EntitySet<Prioriter> _Prioriter;
		
		private EntitySet<SecteurPersonne> _SecteurPersonne;
		
		private EntitySet<StationMasquee> _StationMasquee;
		
		private EntityRef<Role> _Role;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public Personne()
		{
			this._AlarmeMasquee = new EntitySet<AlarmeMasquee>(new Action<AlarmeMasquee>(this.attach_AlarmeMasquee), new Action<AlarmeMasquee>(this.detach_AlarmeMasquee));
			this._DriverConfig = new EntitySet<DriverConfig>(new Action<DriverConfig>(this.attach_DriverConfig), new Action<DriverConfig>(this.detach_DriverConfig));
			this._HorsService = new EntitySet<HorsService>(new Action<HorsService>(this.attach_HorsService), new Action<HorsService>(this.detach_HorsService));
			this._ModeIntervention = new EntitySet<ModeIntervention>(new Action<ModeIntervention>(this.attach_ModeIntervention), new Action<ModeIntervention>(this.detach_ModeIntervention));
			this._Prioriter = new EntitySet<Prioriter>(new Action<Prioriter>(this.attach_Prioriter), new Action<Prioriter>(this.detach_Prioriter));
			this._SecteurPersonne = new EntitySet<SecteurPersonne>(new Action<SecteurPersonne>(this.attach_SecteurPersonne), new Action<SecteurPersonne>(this.detach_SecteurPersonne));
			this._StationMasquee = new EntitySet<StationMasquee>(new Action<StationMasquee>(this.attach_StationMasquee), new Action<StationMasquee>(this.detach_StationMasquee));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_AlarmeMasquee", Storage="_AlarmeMasquee", ThisKey="Id", OtherKey="PersonneId")]
		public EntitySet<AlarmeMasquee> AlarmeMasquee
		{
			get
			{
				return this._AlarmeMasquee;
			}
			set
			{
				this._AlarmeMasquee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_DriverConfig", Storage="_DriverConfig", ThisKey="Id", OtherKey="PersonneId")]
		public EntitySet<DriverConfig> DriverConfig
		{
			get
			{
				return this._DriverConfig;
			}
			set
			{
				this._DriverConfig.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_HorsService", Storage="_HorsService", ThisKey="Id", OtherKey="PersonneId")]
		public EntitySet<HorsService> HorsService
		{
			get
			{
				return this._HorsService;
			}
			set
			{
				this._HorsService.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_ModeIntervention", Storage="_ModeIntervention", ThisKey="Id", OtherKey="PersonneId")]
		public EntitySet<ModeIntervention> ModeIntervention
		{
			get
			{
				return this._ModeIntervention;
			}
			set
			{
				this._ModeIntervention.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_Prioriter", Storage="_Prioriter", ThisKey="Id", OtherKey="PersonneId")]
		public EntitySet<Prioriter> Prioriter
		{
			get
			{
				return this._Prioriter;
			}
			set
			{
				this._Prioriter.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_SecteurPersonne", Storage="_SecteurPersonne", ThisKey="Id", OtherKey="PersonneId")]
		public EntitySet<SecteurPersonne> SecteurPersonne
		{
			get
			{
				return this._SecteurPersonne;
			}
			set
			{
				this._SecteurPersonne.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_StationMasquee", Storage="_StationMasquee", ThisKey="Id", OtherKey="PersonneId")]
		public EntitySet<StationMasquee> StationMasquee
		{
			get
			{
				return this._StationMasquee;
			}
			set
			{
				this._StationMasquee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Personne", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Personne.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Personne.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlarmeMasquee(AlarmeMasquee entity)
		{
			this.SendPropertyChanging();
			entity.Personne = this;
		}
		
		private void detach_AlarmeMasquee(AlarmeMasquee entity)
		{
			this.SendPropertyChanging();
			entity.Personne = null;
		}
		
		private void attach_DriverConfig(DriverConfig entity)
		{
			this.SendPropertyChanging();
			entity.Personne = this;
		}
		
		private void detach_DriverConfig(DriverConfig entity)
		{
			this.SendPropertyChanging();
			entity.Personne = null;
		}
		
		private void attach_HorsService(HorsService entity)
		{
			this.SendPropertyChanging();
			entity.Personne = this;
		}
		
		private void detach_HorsService(HorsService entity)
		{
			this.SendPropertyChanging();
			entity.Personne = null;
		}
		
		private void attach_ModeIntervention(ModeIntervention entity)
		{
			this.SendPropertyChanging();
			entity.Personne = this;
		}
		
		private void detach_ModeIntervention(ModeIntervention entity)
		{
			this.SendPropertyChanging();
			entity.Personne = null;
		}
		
		private void attach_Prioriter(Prioriter entity)
		{
			this.SendPropertyChanging();
			entity.Personne = this;
		}
		
		private void detach_Prioriter(Prioriter entity)
		{
			this.SendPropertyChanging();
			entity.Personne = null;
		}
		
		private void attach_SecteurPersonne(SecteurPersonne entity)
		{
			this.SendPropertyChanging();
			entity.Personne = this;
		}
		
		private void detach_SecteurPersonne(SecteurPersonne entity)
		{
			this.SendPropertyChanging();
			entity.Personne = null;
		}
		
		private void attach_StationMasquee(StationMasquee entity)
		{
			this.SendPropertyChanging();
			entity.Personne = this;
		}
		
		private void detach_StationMasquee(StationMasquee entity)
		{
			this.SendPropertyChanging();
			entity.Personne = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prioriter")]
	public partial class Prioriter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Prioriter1;
		
		private System.Nullable<int> _NumeroSecteur;
		
		private int _RoleId;
		
		private int _SecteurId;
		
		private int _PersonneId;
		
		private int _TeamId;
		
		private EntityRef<Personne> _Personne;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Secteur> _Secteur;
		
		private EntityRef<Team> _Team;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPrioriter1Changing(int value);
    partial void OnPrioriter1Changed();
    partial void OnNumeroSecteurChanging(System.Nullable<int> value);
    partial void OnNumeroSecteurChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnSecteurIdChanging(int value);
    partial void OnSecteurIdChanged();
    partial void OnPersonneIdChanging(int value);
    partial void OnPersonneIdChanged();
    partial void OnTeamIdChanging(int value);
    partial void OnTeamIdChanged();
    #endregion
		
		public Prioriter()
		{
			this._Personne = default(EntityRef<Personne>);
			this._Role = default(EntityRef<Role>);
			this._Secteur = default(EntityRef<Secteur>);
			this._Team = default(EntityRef<Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Prioriter", Storage="_Prioriter1", DbType="Int NOT NULL")]
		public int Prioriter1
		{
			get
			{
				return this._Prioriter1;
			}
			set
			{
				if ((this._Prioriter1 != value))
				{
					this.OnPrioriter1Changing(value);
					this.SendPropertyChanging();
					this._Prioriter1 = value;
					this.SendPropertyChanged("Prioriter1");
					this.OnPrioriter1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroSecteur", DbType="Int")]
		public System.Nullable<int> NumeroSecteur
		{
			get
			{
				return this._NumeroSecteur;
			}
			set
			{
				if ((this._NumeroSecteur != value))
				{
					this.OnNumeroSecteurChanging(value);
					this.SendPropertyChanging();
					this._NumeroSecteur = value;
					this.SendPropertyChanged("NumeroSecteur");
					this.OnNumeroSecteurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecteurId", DbType="Int NOT NULL")]
		public int SecteurId
		{
			get
			{
				return this._SecteurId;
			}
			set
			{
				if ((this._SecteurId != value))
				{
					if (this._Secteur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecteurIdChanging(value);
					this.SendPropertyChanging();
					this._SecteurId = value;
					this.SendPropertyChanged("SecteurId");
					this.OnSecteurIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonneId", DbType="Int NOT NULL")]
		public int PersonneId
		{
			get
			{
				return this._PersonneId;
			}
			set
			{
				if ((this._PersonneId != value))
				{
					if (this._Personne.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonneIdChanging(value);
					this.SendPropertyChanging();
					this._PersonneId = value;
					this.SendPropertyChanged("PersonneId");
					this.OnPersonneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="Int NOT NULL")]
		public int TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					if (this._Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_Prioriter", Storage="_Personne", ThisKey="PersonneId", OtherKey="Id", IsForeignKey=true)]
		public Personne Personne
		{
			get
			{
				return this._Personne.Entity;
			}
			set
			{
				Personne previousValue = this._Personne.Entity;
				if (((previousValue != value) 
							|| (this._Personne.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personne.Entity = null;
						previousValue.Prioriter.Remove(this);
					}
					this._Personne.Entity = value;
					if ((value != null))
					{
						value.Prioriter.Add(this);
						this._PersonneId = value.Id;
					}
					else
					{
						this._PersonneId = default(int);
					}
					this.SendPropertyChanged("Personne");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Prioriter", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Prioriter.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Prioriter.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Secteur_Prioriter", Storage="_Secteur", ThisKey="SecteurId", OtherKey="Id", IsForeignKey=true)]
		public Secteur Secteur
		{
			get
			{
				return this._Secteur.Entity;
			}
			set
			{
				Secteur previousValue = this._Secteur.Entity;
				if (((previousValue != value) 
							|| (this._Secteur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Secteur.Entity = null;
						previousValue.Prioriter.Remove(this);
					}
					this._Secteur.Entity = value;
					if ((value != null))
					{
						value.Prioriter.Add(this);
						this._SecteurId = value.Id;
					}
					else
					{
						this._SecteurId = default(int);
					}
					this.SendPropertyChanged("Secteur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Prioriter", Storage="_Team", ThisKey="TeamId", OtherKey="Id", IsForeignKey=true)]
		public Team Team
		{
			get
			{
				return this._Team.Entity;
			}
			set
			{
				Team previousValue = this._Team.Entity;
				if (((previousValue != value) 
							|| (this._Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team.Entity = null;
						previousValue.Prioriter.Remove(this);
					}
					this._Team.Entity = value;
					if ((value != null))
					{
						value.Prioriter.Add(this);
						this._TeamId = value.Id;
					}
					else
					{
						this._TeamId = default(int);
					}
					this.SendPropertyChanged("Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private bool _ActifAlert;
		
		private System.Nullable<int> _NumeroSequence;
		
		private System.Nullable<int> _NumeroGroupe;
		
		private EntitySet<Model_Planning> _Model_Planning;
		
		private EntitySet<Personne> _Personne;
		
		private EntitySet<Prioriter> _Prioriter;
		
		private EntitySet<Team> _Team;
		
		private EntitySet<Tranche> _Tranche;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnActifAlertChanging(bool value);
    partial void OnActifAlertChanged();
    partial void OnNumeroSequenceChanging(System.Nullable<int> value);
    partial void OnNumeroSequenceChanged();
    partial void OnNumeroGroupeChanging(System.Nullable<int> value);
    partial void OnNumeroGroupeChanged();
    #endregion
		
		public Role()
		{
			this._Model_Planning = new EntitySet<Model_Planning>(new Action<Model_Planning>(this.attach_Model_Planning), new Action<Model_Planning>(this.detach_Model_Planning));
			this._Personne = new EntitySet<Personne>(new Action<Personne>(this.attach_Personne), new Action<Personne>(this.detach_Personne));
			this._Prioriter = new EntitySet<Prioriter>(new Action<Prioriter>(this.attach_Prioriter), new Action<Prioriter>(this.detach_Prioriter));
			this._Team = new EntitySet<Team>(new Action<Team>(this.attach_Team), new Action<Team>(this.detach_Team));
			this._Tranche = new EntitySet<Tranche>(new Action<Tranche>(this.attach_Tranche), new Action<Tranche>(this.detach_Tranche));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActifAlert", DbType="Bit NOT NULL")]
		public bool ActifAlert
		{
			get
			{
				return this._ActifAlert;
			}
			set
			{
				if ((this._ActifAlert != value))
				{
					this.OnActifAlertChanging(value);
					this.SendPropertyChanging();
					this._ActifAlert = value;
					this.SendPropertyChanged("ActifAlert");
					this.OnActifAlertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroSequence", DbType="Int")]
		public System.Nullable<int> NumeroSequence
		{
			get
			{
				return this._NumeroSequence;
			}
			set
			{
				if ((this._NumeroSequence != value))
				{
					this.OnNumeroSequenceChanging(value);
					this.SendPropertyChanging();
					this._NumeroSequence = value;
					this.SendPropertyChanged("NumeroSequence");
					this.OnNumeroSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroGroupe", DbType="Int")]
		public System.Nullable<int> NumeroGroupe
		{
			get
			{
				return this._NumeroGroupe;
			}
			set
			{
				if ((this._NumeroGroupe != value))
				{
					this.OnNumeroGroupeChanging(value);
					this.SendPropertyChanging();
					this._NumeroGroupe = value;
					this.SendPropertyChanged("NumeroGroupe");
					this.OnNumeroGroupeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Model_Planning", Storage="_Model_Planning", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<Model_Planning> Model_Planning
		{
			get
			{
				return this._Model_Planning;
			}
			set
			{
				this._Model_Planning.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Personne", Storage="_Personne", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<Personne> Personne
		{
			get
			{
				return this._Personne;
			}
			set
			{
				this._Personne.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Prioriter", Storage="_Prioriter", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<Prioriter> Prioriter
		{
			get
			{
				return this._Prioriter;
			}
			set
			{
				this._Prioriter.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Team", Storage="_Team", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<Team> Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				this._Team.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Tranche", Storage="_Tranche", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<Tranche> Tranche
		{
			get
			{
				return this._Tranche;
			}
			set
			{
				this._Tranche.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Model_Planning(Model_Planning entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Model_Planning(Model_Planning entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Personne(Personne entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Personne(Personne entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Prioriter(Prioriter entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Prioriter(Prioriter entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Team(Team entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Team(Team entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Tranche(Tranche entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Tranche(Tranche entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Secteur")]
	public partial class Secteur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private string _Abreger;
		
		private System.Nullable<int> _Nombre;
		
		private bool _ActifAlert;
		
		private EntitySet<Prioriter> _Prioriter;
		
		private EntitySet<SecteurPersonne> _SecteurPersonne;
		
		private EntitySet<Station> _Station;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnAbregerChanging(string value);
    partial void OnAbregerChanged();
    partial void OnNombreChanging(System.Nullable<int> value);
    partial void OnNombreChanged();
    partial void OnActifAlertChanging(bool value);
    partial void OnActifAlertChanged();
    #endregion
		
		public Secteur()
		{
			this._Prioriter = new EntitySet<Prioriter>(new Action<Prioriter>(this.attach_Prioriter), new Action<Prioriter>(this.detach_Prioriter));
			this._SecteurPersonne = new EntitySet<SecteurPersonne>(new Action<SecteurPersonne>(this.attach_SecteurPersonne), new Action<SecteurPersonne>(this.detach_SecteurPersonne));
			this._Station = new EntitySet<Station>(new Action<Station>(this.attach_Station), new Action<Station>(this.detach_Station));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(128)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abreger", DbType="VarChar(128)")]
		public string Abreger
		{
			get
			{
				return this._Abreger;
			}
			set
			{
				if ((this._Abreger != value))
				{
					this.OnAbregerChanging(value);
					this.SendPropertyChanging();
					this._Abreger = value;
					this.SendPropertyChanged("Abreger");
					this.OnAbregerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="Int")]
		public System.Nullable<int> Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActifAlert", DbType="Bit NOT NULL")]
		public bool ActifAlert
		{
			get
			{
				return this._ActifAlert;
			}
			set
			{
				if ((this._ActifAlert != value))
				{
					this.OnActifAlertChanging(value);
					this.SendPropertyChanging();
					this._ActifAlert = value;
					this.SendPropertyChanged("ActifAlert");
					this.OnActifAlertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Secteur_Prioriter", Storage="_Prioriter", ThisKey="Id", OtherKey="SecteurId")]
		public EntitySet<Prioriter> Prioriter
		{
			get
			{
				return this._Prioriter;
			}
			set
			{
				this._Prioriter.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Secteur_SecteurPersonne", Storage="_SecteurPersonne", ThisKey="Id", OtherKey="SecteurId")]
		public EntitySet<SecteurPersonne> SecteurPersonne
		{
			get
			{
				return this._SecteurPersonne;
			}
			set
			{
				this._SecteurPersonne.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Secteur_Station", Storage="_Station", ThisKey="Id", OtherKey="SecteurId")]
		public EntitySet<Station> Station
		{
			get
			{
				return this._Station;
			}
			set
			{
				this._Station.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prioriter(Prioriter entity)
		{
			this.SendPropertyChanging();
			entity.Secteur = this;
		}
		
		private void detach_Prioriter(Prioriter entity)
		{
			this.SendPropertyChanging();
			entity.Secteur = null;
		}
		
		private void attach_SecteurPersonne(SecteurPersonne entity)
		{
			this.SendPropertyChanging();
			entity.Secteur = this;
		}
		
		private void detach_SecteurPersonne(SecteurPersonne entity)
		{
			this.SendPropertyChanging();
			entity.Secteur = null;
		}
		
		private void attach_Station(Station entity)
		{
			this.SendPropertyChanging();
			entity.Secteur = this;
		}
		
		private void detach_Station(Station entity)
		{
			this.SendPropertyChanging();
			entity.Secteur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecteurPersonne")]
	public partial class SecteurPersonne : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PersonneId;
		
		private int _SecteurId;
		
		private EntityRef<Personne> _Personne;
		
		private EntityRef<Secteur> _Secteur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPersonneIdChanging(int value);
    partial void OnPersonneIdChanged();
    partial void OnSecteurIdChanging(int value);
    partial void OnSecteurIdChanged();
    #endregion
		
		public SecteurPersonne()
		{
			this._Personne = default(EntityRef<Personne>);
			this._Secteur = default(EntityRef<Secteur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonneId", DbType="Int NOT NULL")]
		public int PersonneId
		{
			get
			{
				return this._PersonneId;
			}
			set
			{
				if ((this._PersonneId != value))
				{
					if (this._Personne.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonneIdChanging(value);
					this.SendPropertyChanging();
					this._PersonneId = value;
					this.SendPropertyChanged("PersonneId");
					this.OnPersonneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecteurId", DbType="Int NOT NULL")]
		public int SecteurId
		{
			get
			{
				return this._SecteurId;
			}
			set
			{
				if ((this._SecteurId != value))
				{
					if (this._Secteur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecteurIdChanging(value);
					this.SendPropertyChanging();
					this._SecteurId = value;
					this.SendPropertyChanged("SecteurId");
					this.OnSecteurIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_SecteurPersonne", Storage="_Personne", ThisKey="PersonneId", OtherKey="Id", IsForeignKey=true)]
		public Personne Personne
		{
			get
			{
				return this._Personne.Entity;
			}
			set
			{
				Personne previousValue = this._Personne.Entity;
				if (((previousValue != value) 
							|| (this._Personne.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personne.Entity = null;
						previousValue.SecteurPersonne.Remove(this);
					}
					this._Personne.Entity = value;
					if ((value != null))
					{
						value.SecteurPersonne.Add(this);
						this._PersonneId = value.Id;
					}
					else
					{
						this._PersonneId = default(int);
					}
					this.SendPropertyChanged("Personne");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Secteur_SecteurPersonne", Storage="_Secteur", ThisKey="SecteurId", OtherKey="Id", IsForeignKey=true)]
		public Secteur Secteur
		{
			get
			{
				return this._Secteur.Entity;
			}
			set
			{
				Secteur previousValue = this._Secteur.Entity;
				if (((previousValue != value) 
							|| (this._Secteur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Secteur.Entity = null;
						previousValue.SecteurPersonne.Remove(this);
					}
					this._Secteur.Entity = value;
					if ((value != null))
					{
						value.SecteurPersonne.Add(this);
						this._SecteurId = value.Id;
					}
					else
					{
						this._SecteurId = default(int);
					}
					this.SendPropertyChanged("Secteur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Siecle")]
	public partial class Siecle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Numero;
		
		private EntitySet<Annee> _Annee;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeroChanging(System.Nullable<int> value);
    partial void OnNumeroChanged();
    #endregion
		
		public Siecle()
		{
			this._Annee = new EntitySet<Annee>(new Action<Annee>(this.attach_Annee), new Action<Annee>(this.detach_Annee));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int")]
		public System.Nullable<int> Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Siecle_Annee", Storage="_Annee", ThisKey="Id", OtherKey="SiecleId")]
		public EntitySet<Annee> Annee
		{
			get
			{
				return this._Annee;
			}
			set
			{
				this._Annee.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Annee(Annee entity)
		{
			this.SendPropertyChanging();
			entity.Siecle = this;
		}
		
		private void detach_Annee(Annee entity)
		{
			this.SendPropertyChanging();
			entity.Siecle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Station")]
	public partial class Station : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private string _AbregerTBOX;
		
		private string _CodeStation;
		
		private string _Adresse;
		
		private string _TelephoneStation;
		
		private string _Telephoneautomate;
		
		private string _URL;
		
		private string _Coordonnee;
		
		private System.Nullable<int> _NumeroSecteur;
		
		private int _SecteurId;
		
		private int _CommuneId;
		
		private int _TypeStationId;
		
		private EntitySet<Alarme> _Alarme;
		
		private EntitySet<ModeIntervention> _ModeIntervention;
		
		private EntitySet<StationMasquee> _StationMasquee;
		
		private EntityRef<Commune> _Commune;
		
		private EntityRef<Secteur> _Secteur;
		
		private EntityRef<TypeStation> _TypeStation;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnAbregerTBOXChanging(string value);
    partial void OnAbregerTBOXChanged();
    partial void OnCodeStationChanging(string value);
    partial void OnCodeStationChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnTelephoneStationChanging(string value);
    partial void OnTelephoneStationChanged();
    partial void OnTelephoneautomateChanging(string value);
    partial void OnTelephoneautomateChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnCoordonneeChanging(string value);
    partial void OnCoordonneeChanged();
    partial void OnNumeroSecteurChanging(System.Nullable<int> value);
    partial void OnNumeroSecteurChanged();
    partial void OnSecteurIdChanging(int value);
    partial void OnSecteurIdChanged();
    partial void OnCommuneIdChanging(int value);
    partial void OnCommuneIdChanged();
    partial void OnTypeStationIdChanging(int value);
    partial void OnTypeStationIdChanged();
    #endregion
		
		public Station()
		{
			this._Alarme = new EntitySet<Alarme>(new Action<Alarme>(this.attach_Alarme), new Action<Alarme>(this.detach_Alarme));
			this._ModeIntervention = new EntitySet<ModeIntervention>(new Action<ModeIntervention>(this.attach_ModeIntervention), new Action<ModeIntervention>(this.detach_ModeIntervention));
			this._StationMasquee = new EntitySet<StationMasquee>(new Action<StationMasquee>(this.attach_StationMasquee), new Action<StationMasquee>(this.detach_StationMasquee));
			this._Commune = default(EntityRef<Commune>);
			this._Secteur = default(EntityRef<Secteur>);
			this._TypeStation = default(EntityRef<TypeStation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(128)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbregerTBOX", DbType="VarChar(128)")]
		public string AbregerTBOX
		{
			get
			{
				return this._AbregerTBOX;
			}
			set
			{
				if ((this._AbregerTBOX != value))
				{
					this.OnAbregerTBOXChanging(value);
					this.SendPropertyChanging();
					this._AbregerTBOX = value;
					this.SendPropertyChanged("AbregerTBOX");
					this.OnAbregerTBOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeStation", DbType="VarChar(128)")]
		public string CodeStation
		{
			get
			{
				return this._CodeStation;
			}
			set
			{
				if ((this._CodeStation != value))
				{
					this.OnCodeStationChanging(value);
					this.SendPropertyChanging();
					this._CodeStation = value;
					this.SendPropertyChanged("CodeStation");
					this.OnCodeStationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(255)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneStation", DbType="VarChar(100)")]
		public string TelephoneStation
		{
			get
			{
				return this._TelephoneStation;
			}
			set
			{
				if ((this._TelephoneStation != value))
				{
					this.OnTelephoneStationChanging(value);
					this.SendPropertyChanging();
					this._TelephoneStation = value;
					this.SendPropertyChanged("TelephoneStation");
					this.OnTelephoneStationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephoneautomate", DbType="VarChar(100)")]
		public string Telephoneautomate
		{
			get
			{
				return this._Telephoneautomate;
			}
			set
			{
				if ((this._Telephoneautomate != value))
				{
					this.OnTelephoneautomateChanging(value);
					this.SendPropertyChanging();
					this._Telephoneautomate = value;
					this.SendPropertyChanged("Telephoneautomate");
					this.OnTelephoneautomateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(2048)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coordonnee", DbType="VarChar(2048)")]
		public string Coordonnee
		{
			get
			{
				return this._Coordonnee;
			}
			set
			{
				if ((this._Coordonnee != value))
				{
					this.OnCoordonneeChanging(value);
					this.SendPropertyChanging();
					this._Coordonnee = value;
					this.SendPropertyChanged("Coordonnee");
					this.OnCoordonneeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroSecteur", DbType="Int")]
		public System.Nullable<int> NumeroSecteur
		{
			get
			{
				return this._NumeroSecteur;
			}
			set
			{
				if ((this._NumeroSecteur != value))
				{
					this.OnNumeroSecteurChanging(value);
					this.SendPropertyChanging();
					this._NumeroSecteur = value;
					this.SendPropertyChanged("NumeroSecteur");
					this.OnNumeroSecteurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecteurId", DbType="Int NOT NULL")]
		public int SecteurId
		{
			get
			{
				return this._SecteurId;
			}
			set
			{
				if ((this._SecteurId != value))
				{
					if (this._Secteur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecteurIdChanging(value);
					this.SendPropertyChanging();
					this._SecteurId = value;
					this.SendPropertyChanged("SecteurId");
					this.OnSecteurIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommuneId", DbType="Int NOT NULL")]
		public int CommuneId
		{
			get
			{
				return this._CommuneId;
			}
			set
			{
				if ((this._CommuneId != value))
				{
					if (this._Commune.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommuneIdChanging(value);
					this.SendPropertyChanging();
					this._CommuneId = value;
					this.SendPropertyChanged("CommuneId");
					this.OnCommuneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeStationId", DbType="Int NOT NULL")]
		public int TypeStationId
		{
			get
			{
				return this._TypeStationId;
			}
			set
			{
				if ((this._TypeStationId != value))
				{
					if (this._TypeStation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeStationIdChanging(value);
					this.SendPropertyChanging();
					this._TypeStationId = value;
					this.SendPropertyChanged("TypeStationId");
					this.OnTypeStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Alarme", Storage="_Alarme", ThisKey="Id", OtherKey="StationId")]
		public EntitySet<Alarme> Alarme
		{
			get
			{
				return this._Alarme;
			}
			set
			{
				this._Alarme.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_ModeIntervention", Storage="_ModeIntervention", ThisKey="Id", OtherKey="StationId")]
		public EntitySet<ModeIntervention> ModeIntervention
		{
			get
			{
				return this._ModeIntervention;
			}
			set
			{
				this._ModeIntervention.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_StationMasquee", Storage="_StationMasquee", ThisKey="Id", OtherKey="StationId")]
		public EntitySet<StationMasquee> StationMasquee
		{
			get
			{
				return this._StationMasquee;
			}
			set
			{
				this._StationMasquee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commune_Station", Storage="_Commune", ThisKey="CommuneId", OtherKey="Id", IsForeignKey=true)]
		public Commune Commune
		{
			get
			{
				return this._Commune.Entity;
			}
			set
			{
				Commune previousValue = this._Commune.Entity;
				if (((previousValue != value) 
							|| (this._Commune.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commune.Entity = null;
						previousValue.Station.Remove(this);
					}
					this._Commune.Entity = value;
					if ((value != null))
					{
						value.Station.Add(this);
						this._CommuneId = value.Id;
					}
					else
					{
						this._CommuneId = default(int);
					}
					this.SendPropertyChanged("Commune");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Secteur_Station", Storage="_Secteur", ThisKey="SecteurId", OtherKey="Id", IsForeignKey=true)]
		public Secteur Secteur
		{
			get
			{
				return this._Secteur.Entity;
			}
			set
			{
				Secteur previousValue = this._Secteur.Entity;
				if (((previousValue != value) 
							|| (this._Secteur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Secteur.Entity = null;
						previousValue.Station.Remove(this);
					}
					this._Secteur.Entity = value;
					if ((value != null))
					{
						value.Station.Add(this);
						this._SecteurId = value.Id;
					}
					else
					{
						this._SecteurId = default(int);
					}
					this.SendPropertyChanged("Secteur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeStation_Station", Storage="_TypeStation", ThisKey="TypeStationId", OtherKey="Id", IsForeignKey=true)]
		public TypeStation TypeStation
		{
			get
			{
				return this._TypeStation.Entity;
			}
			set
			{
				TypeStation previousValue = this._TypeStation.Entity;
				if (((previousValue != value) 
							|| (this._TypeStation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeStation.Entity = null;
						previousValue.Station.Remove(this);
					}
					this._TypeStation.Entity = value;
					if ((value != null))
					{
						value.Station.Add(this);
						this._TypeStationId = value.Id;
					}
					else
					{
						this._TypeStationId = default(int);
					}
					this.SendPropertyChanged("TypeStation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alarme(Alarme entity)
		{
			this.SendPropertyChanging();
			entity.Station = this;
		}
		
		private void detach_Alarme(Alarme entity)
		{
			this.SendPropertyChanging();
			entity.Station = null;
		}
		
		private void attach_ModeIntervention(ModeIntervention entity)
		{
			this.SendPropertyChanging();
			entity.Station = this;
		}
		
		private void detach_ModeIntervention(ModeIntervention entity)
		{
			this.SendPropertyChanging();
			entity.Station = null;
		}
		
		private void attach_StationMasquee(StationMasquee entity)
		{
			this.SendPropertyChanging();
			entity.Station = this;
		}
		
		private void detach_StationMasquee(StationMasquee entity)
		{
			this.SendPropertyChanging();
			entity.Station = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StationMasquee")]
	public partial class StationMasquee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateDebut;
		
		private System.DateTime _DateFin;
		
		private string _Comment;
		
		private int _PersonneId;
		
		private int _StationId;
		
		private EntityRef<Personne> _Personne;
		
		private EntityRef<Station> _Station;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateDebutChanging(System.DateTime value);
    partial void OnDateDebutChanged();
    partial void OnDateFinChanging(System.DateTime value);
    partial void OnDateFinChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPersonneIdChanging(int value);
    partial void OnPersonneIdChanged();
    partial void OnStationIdChanging(int value);
    partial void OnStationIdChanged();
    #endregion
		
		public StationMasquee()
		{
			this._Personne = default(EntityRef<Personne>);
			this._Station = default(EntityRef<Station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebut", DbType="Date NOT NULL")]
		public System.DateTime DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFin", DbType="Date NOT NULL")]
		public System.DateTime DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(1024)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonneId", DbType="Int NOT NULL")]
		public int PersonneId
		{
			get
			{
				return this._PersonneId;
			}
			set
			{
				if ((this._PersonneId != value))
				{
					if (this._Personne.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonneIdChanging(value);
					this.SendPropertyChanging();
					this._PersonneId = value;
					this.SendPropertyChanged("PersonneId");
					this.OnPersonneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationId", DbType="Int NOT NULL")]
		public int StationId
		{
			get
			{
				return this._StationId;
			}
			set
			{
				if ((this._StationId != value))
				{
					if (this._Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationIdChanging(value);
					this.SendPropertyChanging();
					this._StationId = value;
					this.SendPropertyChanged("StationId");
					this.OnStationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personne_StationMasquee", Storage="_Personne", ThisKey="PersonneId", OtherKey="Id", IsForeignKey=true)]
		public Personne Personne
		{
			get
			{
				return this._Personne.Entity;
			}
			set
			{
				Personne previousValue = this._Personne.Entity;
				if (((previousValue != value) 
							|| (this._Personne.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personne.Entity = null;
						previousValue.StationMasquee.Remove(this);
					}
					this._Personne.Entity = value;
					if ((value != null))
					{
						value.StationMasquee.Add(this);
						this._PersonneId = value.Id;
					}
					else
					{
						this._PersonneId = default(int);
					}
					this.SendPropertyChanged("Personne");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_StationMasquee", Storage="_Station", ThisKey="StationId", OtherKey="Id", IsForeignKey=true)]
		public Station Station
		{
			get
			{
				return this._Station.Entity;
			}
			set
			{
				Station previousValue = this._Station.Entity;
				if (((previousValue != value) 
							|| (this._Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Station.Entity = null;
						previousValue.StationMasquee.Remove(this);
					}
					this._Station.Entity = value;
					if ((value != null))
					{
						value.StationMasquee.Add(this);
						this._StationId = value.Id;
					}
					else
					{
						this._StationId = default(int);
					}
					this.SendPropertyChanged("Station");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Team")]
	public partial class Team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private bool _ActifAlert;
		
		private int _ActifSPOPosition;
		
		private string _ColorTeam;
		
		private int _RoleId;
		
		private EntitySet<Model_Planning> _Model_Planning;
		
		private EntitySet<Model_Planning> _Model_Planning1;
		
		private EntitySet<Prioriter> _Prioriter;
		
		private EntitySet<Tranche> _Tranche;
		
		private EntityRef<Role> _Role;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnActifAlertChanging(bool value);
    partial void OnActifAlertChanged();
    partial void OnActifSPOPositionChanging(int value);
    partial void OnActifSPOPositionChanged();
    partial void OnColorTeamChanging(string value);
    partial void OnColorTeamChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public Team()
		{
			this._Model_Planning = new EntitySet<Model_Planning>(new Action<Model_Planning>(this.attach_Model_Planning), new Action<Model_Planning>(this.detach_Model_Planning));
			this._Model_Planning1 = new EntitySet<Model_Planning>(new Action<Model_Planning>(this.attach_Model_Planning1), new Action<Model_Planning>(this.detach_Model_Planning1));
			this._Prioriter = new EntitySet<Prioriter>(new Action<Prioriter>(this.attach_Prioriter), new Action<Prioriter>(this.detach_Prioriter));
			this._Tranche = new EntitySet<Tranche>(new Action<Tranche>(this.attach_Tranche), new Action<Tranche>(this.detach_Tranche));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActifAlert", DbType="Bit NOT NULL")]
		public bool ActifAlert
		{
			get
			{
				return this._ActifAlert;
			}
			set
			{
				if ((this._ActifAlert != value))
				{
					this.OnActifAlertChanging(value);
					this.SendPropertyChanging();
					this._ActifAlert = value;
					this.SendPropertyChanged("ActifAlert");
					this.OnActifAlertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActifSPOPosition", DbType="Int NOT NULL")]
		public int ActifSPOPosition
		{
			get
			{
				return this._ActifSPOPosition;
			}
			set
			{
				if ((this._ActifSPOPosition != value))
				{
					this.OnActifSPOPositionChanging(value);
					this.SendPropertyChanging();
					this._ActifSPOPosition = value;
					this.SendPropertyChanged("ActifSPOPosition");
					this.OnActifSPOPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorTeam", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string ColorTeam
		{
			get
			{
				return this._ColorTeam;
			}
			set
			{
				if ((this._ColorTeam != value))
				{
					this.OnColorTeamChanging(value);
					this.SendPropertyChanging();
					this._ColorTeam = value;
					this.SendPropertyChanged("ColorTeam");
					this.OnColorTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Model_Planning", Storage="_Model_Planning", ThisKey="Id", OtherKey="TeamId")]
		public EntitySet<Model_Planning> Model_Planning
		{
			get
			{
				return this._Model_Planning;
			}
			set
			{
				this._Model_Planning.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Model_Planning1", Storage="_Model_Planning1", ThisKey="Id", OtherKey="TypeId")]
		public EntitySet<Model_Planning> Model_Planning1
		{
			get
			{
				return this._Model_Planning1;
			}
			set
			{
				this._Model_Planning1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Prioriter", Storage="_Prioriter", ThisKey="Id", OtherKey="TeamId")]
		public EntitySet<Prioriter> Prioriter
		{
			get
			{
				return this._Prioriter;
			}
			set
			{
				this._Prioriter.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Tranche", Storage="_Tranche", ThisKey="Id", OtherKey="TeamId")]
		public EntitySet<Tranche> Tranche
		{
			get
			{
				return this._Tranche;
			}
			set
			{
				this._Tranche.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Team", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Team.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Team.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Model_Planning(Model_Planning entity)
		{
			this.SendPropertyChanging();
			entity.Team = this;
		}
		
		private void detach_Model_Planning(Model_Planning entity)
		{
			this.SendPropertyChanging();
			entity.Team = null;
		}
		
		private void attach_Model_Planning1(Model_Planning entity)
		{
			this.SendPropertyChanging();
			entity.Team1 = this;
		}
		
		private void detach_Model_Planning1(Model_Planning entity)
		{
			this.SendPropertyChanging();
			entity.Team1 = null;
		}
		
		private void attach_Prioriter(Prioriter entity)
		{
			this.SendPropertyChanging();
			entity.Team = this;
		}
		
		private void detach_Prioriter(Prioriter entity)
		{
			this.SendPropertyChanging();
			entity.Team = null;
		}
		
		private void attach_Tranche(Tranche entity)
		{
			this.SendPropertyChanging();
			entity.Team = this;
		}
		
		private void detach_Tranche(Tranche entity)
		{
			this.SendPropertyChanging();
			entity.Team = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tranche")]
	public partial class Tranche : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _NumeroTranche;
		
		private System.Nullable<bool> _Repli;
		
		private int _JourId;
		
		private int _RoleId;
		
		private System.Nullable<int> _TeamId;
		
		private System.Nullable<int> _TypeAlarmeId;
		
		private EntityRef<Jour> _Jour;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Team> _Team;
		
		private EntityRef<TypeAlarme> _TypeAlarme;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeroTrancheChanging(System.Nullable<int> value);
    partial void OnNumeroTrancheChanged();
    partial void OnRepliChanging(System.Nullable<bool> value);
    partial void OnRepliChanged();
    partial void OnJourIdChanging(int value);
    partial void OnJourIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnTeamIdChanging(System.Nullable<int> value);
    partial void OnTeamIdChanged();
    partial void OnTypeAlarmeIdChanging(System.Nullable<int> value);
    partial void OnTypeAlarmeIdChanged();
    #endregion
		
		public Tranche()
		{
			this._Jour = default(EntityRef<Jour>);
			this._Role = default(EntityRef<Role>);
			this._Team = default(EntityRef<Team>);
			this._TypeAlarme = default(EntityRef<TypeAlarme>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroTranche", DbType="Int")]
		public System.Nullable<int> NumeroTranche
		{
			get
			{
				return this._NumeroTranche;
			}
			set
			{
				if ((this._NumeroTranche != value))
				{
					this.OnNumeroTrancheChanging(value);
					this.SendPropertyChanging();
					this._NumeroTranche = value;
					this.SendPropertyChanged("NumeroTranche");
					this.OnNumeroTrancheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Repli", DbType="Bit")]
		public System.Nullable<bool> Repli
		{
			get
			{
				return this._Repli;
			}
			set
			{
				if ((this._Repli != value))
				{
					this.OnRepliChanging(value);
					this.SendPropertyChanging();
					this._Repli = value;
					this.SendPropertyChanged("Repli");
					this.OnRepliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JourId", DbType="Int NOT NULL")]
		public int JourId
		{
			get
			{
				return this._JourId;
			}
			set
			{
				if ((this._JourId != value))
				{
					if (this._Jour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJourIdChanging(value);
					this.SendPropertyChanging();
					this._JourId = value;
					this.SendPropertyChanged("JourId");
					this.OnJourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="Int")]
		public System.Nullable<int> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					if (this._Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeAlarmeId", DbType="Int")]
		public System.Nullable<int> TypeAlarmeId
		{
			get
			{
				return this._TypeAlarmeId;
			}
			set
			{
				if ((this._TypeAlarmeId != value))
				{
					if (this._TypeAlarme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeAlarmeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeAlarmeId = value;
					this.SendPropertyChanged("TypeAlarmeId");
					this.OnTypeAlarmeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jour_Tranche", Storage="_Jour", ThisKey="JourId", OtherKey="Id", IsForeignKey=true)]
		public Jour Jour
		{
			get
			{
				return this._Jour.Entity;
			}
			set
			{
				Jour previousValue = this._Jour.Entity;
				if (((previousValue != value) 
							|| (this._Jour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jour.Entity = null;
						previousValue.Tranche.Remove(this);
					}
					this._Jour.Entity = value;
					if ((value != null))
					{
						value.Tranche.Add(this);
						this._JourId = value.Id;
					}
					else
					{
						this._JourId = default(int);
					}
					this.SendPropertyChanged("Jour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Tranche", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Tranche.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Tranche.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Tranche", Storage="_Team", ThisKey="TeamId", OtherKey="Id", IsForeignKey=true)]
		public Team Team
		{
			get
			{
				return this._Team.Entity;
			}
			set
			{
				Team previousValue = this._Team.Entity;
				if (((previousValue != value) 
							|| (this._Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team.Entity = null;
						previousValue.Tranche.Remove(this);
					}
					this._Team.Entity = value;
					if ((value != null))
					{
						value.Tranche.Add(this);
						this._TeamId = value.Id;
					}
					else
					{
						this._TeamId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Team");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAlarme_Tranche", Storage="_TypeAlarme", ThisKey="TypeAlarmeId", OtherKey="Id", IsForeignKey=true)]
		public TypeAlarme TypeAlarme
		{
			get
			{
				return this._TypeAlarme.Entity;
			}
			set
			{
				TypeAlarme previousValue = this._TypeAlarme.Entity;
				if (((previousValue != value) 
							|| (this._TypeAlarme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeAlarme.Entity = null;
						previousValue.Tranche.Remove(this);
					}
					this._TypeAlarme.Entity = value;
					if ((value != null))
					{
						value.Tranche.Add(this);
						this._TypeAlarmeId = value.Id;
					}
					else
					{
						this._TypeAlarmeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TypeAlarme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeAlarme")]
	public partial class TypeAlarme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Libelle;
		
		private string _Description;
		
		private EntitySet<Alarme> _Alarme;
		
		private EntitySet<Tranche> _Tranche;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLibelleChanging(string value);
    partial void OnLibelleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TypeAlarme()
		{
			this._Alarme = new EntitySet<Alarme>(new Action<Alarme>(this.attach_Alarme), new Action<Alarme>(this.detach_Alarme));
			this._Tranche = new EntitySet<Tranche>(new Action<Tranche>(this.attach_Tranche), new Action<Tranche>(this.detach_Tranche));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Libelle", DbType="VarChar(128)")]
		public string Libelle
		{
			get
			{
				return this._Libelle;
			}
			set
			{
				if ((this._Libelle != value))
				{
					this.OnLibelleChanging(value);
					this.SendPropertyChanging();
					this._Libelle = value;
					this.SendPropertyChanged("Libelle");
					this.OnLibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(12)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAlarme_Alarme", Storage="_Alarme", ThisKey="Id", OtherKey="TypeAlarmeId")]
		public EntitySet<Alarme> Alarme
		{
			get
			{
				return this._Alarme;
			}
			set
			{
				this._Alarme.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAlarme_Tranche", Storage="_Tranche", ThisKey="Id", OtherKey="TypeAlarmeId")]
		public EntitySet<Tranche> Tranche
		{
			get
			{
				return this._Tranche;
			}
			set
			{
				this._Tranche.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alarme(Alarme entity)
		{
			this.SendPropertyChanging();
			entity.TypeAlarme = this;
		}
		
		private void detach_Alarme(Alarme entity)
		{
			this.SendPropertyChanging();
			entity.TypeAlarme = null;
		}
		
		private void attach_Tranche(Tranche entity)
		{
			this.SendPropertyChanging();
			entity.TypeAlarme = this;
		}
		
		private void detach_Tranche(Tranche entity)
		{
			this.SendPropertyChanging();
			entity.TypeAlarme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeDriver")]
	public partial class TypeDriver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Numero;
		
		private string _Name;
		
		private EntitySet<DriverConfig> _DriverConfig;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeroChanging(int value);
    partial void OnNumeroChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TypeDriver()
		{
			this._DriverConfig = new EntitySet<DriverConfig>(new Action<DriverConfig>(this.attach_DriverConfig), new Action<DriverConfig>(this.detach_DriverConfig));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int NOT NULL")]
		public int Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeDriver_DriverConfig", Storage="_DriverConfig", ThisKey="Id", OtherKey="TypeDriverId")]
		public EntitySet<DriverConfig> DriverConfig
		{
			get
			{
				return this._DriverConfig;
			}
			set
			{
				this._DriverConfig.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DriverConfig(DriverConfig entity)
		{
			this.SendPropertyChanging();
			entity.TypeDriver = this;
		}
		
		private void detach_DriverConfig(DriverConfig entity)
		{
			this.SendPropertyChanging();
			entity.TypeDriver = null;
		}
	}
}
#pragma warning restore 1591
